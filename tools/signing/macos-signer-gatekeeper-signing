set -x

TORBROWSER_VERSION=$1
if [ -z "$TORBROWSER_VERSION" ];
then
  echo "Please call this script with a Tor Browser version!"
  exit 1
fi
ENTITLEMENTS=/Users/torbrowser/signing/alpha.entitlements.xml
if [ -z "$BUNDLE_LOCALES" ];
then
  BUNDLE_LOCALES="ar ca cs da de el en-US es-AR es-ES fa fr ga-IE he hu id is it ja ka ko lt mk ms my nb-NO nl pl pt-BR ro ru sv-SE th tr vi zh-CN zh-TW"
fi

function check_signature() {
  LANG=$1
  TORBROWSER_VERSION=$2
  UNZIP=$3
  local failed_open=0
  local failed_exec=0
  if [ ${UNZIP} -eq 1 ]
  then
    test -d test_${LANG} && rm -r test_${LANG}
    unzip -d test_${LANG} -q tb-${TORBROWSER_VERSION}_$LANG.zip
    pushd test_${LANG}
  fi
  echo "Checking $LANG..."
  spctl -vvvv --assess --type open --context context:primary-signature 'Tor Browser.app/'
  if [ $? -ne 3 ]; then
    echo tb-${TORBROWSER_VERSION}_$LANG.zip not signed correctly. Failed open.
    failed_open=1
  fi
  spctl -vvvv --assess --type exec --context context:primary-signature 'Tor Browser.app/'
  if [ $? -ne 0 ]; then
    echo tb-${TORBROWSER_VERSION}_$LANG.zip not signed correctly. Failed exec.
    failed_exec=1
  fi
  if [ ${UNZIP} -eq 1 ]
  then
    popd
    rm -r test_${LANG}
  fi
  if [ ${failed_open} -ne 0 -o ${failed_exec} -ne 0 ]
  then
    return 1
  fi
}

for LANG in $BUNDLE_LOCALES
do
  if [ -f tb-${TORBROWSER_VERSION}_${LANG}.zip ]
  then
    echo "Deleting tb-${TORBROWSER_VERSION}_${LANG}.zip"
    rm tb-${TORBROWSER_VERSION}_${LANG}.zip
  fi
  if [ -d "Tor Browser.app" ]
  then
    echo "Deleting Tor Browser.app"
    rm -r "Tor Browser.app"
  fi
  if [ -d '/Volumes/Tor Browser' ]; then
    echo "DMG already mounted. Please correct."
    exit 1
  fi
  hdiutil attach TorBrowser-${TORBROWSER_VERSION}-osx64_$LANG.dmg
  cp -rf "/Volumes/Tor Browser/Tor Browser.app" "Tor Browser.app"
  echo "Signing Tor Browser_$LANG.app"
  codesign -vvv --deep -o runtime --entitlements="$ENTITLEMENTS" --timestamp -f -s "Developer ID Application: The Tor Project, Inc (MADPSAYN6T)" "Tor Browser.app/"
  echo "codesign exit code: $?"
  check_signature $LANG $TORBROWSER_VERSION 0
  if [ $? -eq 1 ]
  then
    echo Signature verification failed.
    rm -r "Tor Browser.app"
    hdiutil detach "/Volumes/Tor Browser"
    exit 1
  fi
  echo "Zipping up"
  zip -qr tb-${TORBROWSER_VERSION}_${LANG}.zip "Tor Browser.app"
  rm -rf "Tor Browser.app"
  hdiutil detach "/Volumes/Tor Browser"
  check_signature $LANG $TORBROWSER_VERSION 1
  if [ $? -eq 1 ]
  then
    echo Signature verification failed.
    rm -r "Tor Browser.app"
  fi
done
#for LANG in $BUNDLE_LOCALES
#do
#  hdiutil attach TorBrowser-${TORBROWSER_VERSION}-osx64_$LANG.dmg
#  cp -rf "/Volumes/Tor Browser/Tor Browser.app" "Tor Browser.app"
#  echo "Signing Tor Browser_$LANG.app"
#  codesign -vvv --deep -o runtime --entitlements="$ENTITLEMENTS" --timestamp -f -s "Developer ID Application: The Tor Project, Inc (MADPSAYN6T)" "Tor Browser.app/"
#  #codesign -vvv --deep -o runtime --entitlements="$ENTITLEMENTS" --timestamp=none -f -s "Developer ID Application: The Tor Project, Inc (MADPSAYN6T)" "Tor Browser.app/"
#  echo "Zipping up"
#  zip -qr tb-${TORBROWSER_VERSION}_${LANG}.zip "Tor Browser.app"
#  rm -rf "Tor Browser.app"
#  hdiutil detach "/Volumes/Tor Browser"
#done
